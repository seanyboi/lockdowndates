[
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "lockdowndates",
    "section": "",
    "text": "LockdownDates\n\n LockdownDates (country:Union[List[str],str], start_date:str,\n                end_date:str, restrictions:Union[List,Tuple])\n\nRetrieve the dates of the restrictions in countries imposed by governments around the world during the covid-19 pandemic.\ncountry: Country from table of countries in README.md start_date: Date you wish to collect dates from in “YYYY-MM-DD” format end_date: Date you wish to collect dates from in “YYYY-MM-DD” format restrictions: List of restrictions to be returned listed in README.md\n\nld = LockdownDates(\"Aruba\", \"2022-01-01\", \"2022-01-30\", (\"stay_at_home\", \"masks\"))\nx = ld.dates()\nx\n\nFetching lockdown dates...\nFetched lockdown dates for: Aruba\n\n\n\n\n\n\n  \n    \n      \n      aruba_country_code\n      aruba_masks\n      aruba_stay_at_home\n    \n    \n      timestamp\n      \n      \n      \n    \n  \n  \n    \n      2022-01-01\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-02\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-03\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-04\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-05\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-06\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-07\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-08\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-09\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-10\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-11\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-12\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-13\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-14\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-15\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-16\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-17\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-18\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-19\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-20\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-21\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-22\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-23\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-24\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-25\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-26\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-27\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-28\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-29\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-30\n      ABW\n      2.0\n      2.0\n    \n  \n\n\n\n\n\n\n\nLockdownDates.dates\n\n LockdownDates.dates (save:bool=False)\n\nReturns the restriction lockdown dates for a specific set of countries.\nParameters       save : bool, optional          saves restrictions to a csv file for caching (default is False)\nReturns:       DataFrame containing the dates a country was subject to certain restrictions during the pandemic.\nRaises:       Exception: failed to collect data.\n\nld = LockdownDates(\"Aruba\", \"2022-01-01\", \"2022-01-30\", [\"stay_at_home\", \"masks\"])\n\n\nassert ld.country==[\"Aruba\"]\nassert type(ld.country)==list\n\n\nassert ld.start_date==dt(2022, 1, 1, 0, 0)\nassert type(ld.start_date)==dt\n\n\nassert ld.end_date==dt(2022, 1, 30, 0, 0)\nassert type(ld.end_date)==dt\n\n\nassert ld.restrictions==[\"stay_at_home\", \"masks\"]\nassert type(ld.restrictions)==list"
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "lockdowndates",
    "section": "",
    "text": "Before anything else, please install the git hooks that run automatic scripts during each commit and merge to strip the notebooks of superfluous metadata (and avoid merge conflicts). After cloning the repository, run the following command inside it:\nnbdev_install_git_hooks\n\n\n\n\nEnsure the bug was not already reported by searching on GitHub under Issues.\nIf you’re unable to find an open issue addressing the problem, open a new one. Be sure to include a title and clear description, as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring.\nBe sure to add the complete error messages.\n\n\n\n\nOpen a new GitHub pull request with the patch.\nEnsure that your PR includes a test that fails without your patch, and pass with it.\nEnsure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n\n\n\n\n\n\nKeep each PR focused. While it’s more convenient, do not combine several unrelated fixes together. Create as many branches as needing to keep each PR focused.\nDo not mix style changes/fixes with “functional” changes. It’s very difficult to review such PRs and it most likely get rejected.\nDo not add/remove vertical whitespace. Preserve the original style of the file you edit as much as you can.\nDo not turn an already submitted PR into your development playground. If after you submitted PR, you discovered that more work is needed - close the PR, do the required work and then submit a new PR. Otherwise each of your commits requires attention from maintainers of the project.\nIf, however, you submitted a PR and received a request for changes, you should proceed with commits inside that PR, so that the maintainer can see the incremental fixes and won’t need to review the whole PR again. In the exception case where you realize it’ll take many many commits to complete the requests, then it’s probably best to close the PR, do the work and then submit it again. Use common sense where you’d choose one way over another.\n\n\n\n\n\nDocs are automatically created from the notebooks in the nbs folder."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "lockdowndates",
    "section": "",
    "text": "python version 3.8"
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "lockdowndates",
    "section": "Install",
    "text": "Install\npip install lockdowndates\nconda install -c seanyboi lockdowndates"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "lockdowndates",
    "section": "How to use",
    "text": "How to use\n\nImport\n\nfrom lockdowndates.core import LockdownDates\n\n\n\nRestrictions\nBelow are the restrictions you can add to the LockdownDates() restrictions parameter and their meanings. You must specifiy a restriction when initiating your class and can do so with a list: [\"stay_at_home\",...] or tuple: (\"masks\",...)\nstay_at_home: - NaN - No data available for that date. - 1.0 - recommend not leaving house. - 2.0 - require not leaving house with exceptions for daily exercise, grocery shopping, and ‘essential’ trips. - 3.0 - require not leaving house with minimal exceptions (eg allowed to leave once a week, or only one person can leave at a time, etc.\nmasks: - 0.0 - No policy. - 1.0 - Recommended. - 2.0 - Required in some specified shared/public spaces outside the home with other people present, or some situations when social distancing not possible. - 3.0 - Required in all shared/public spaces outside the home with other people present or all situations when social distancing not possible. - 4.0 - Required outside the home at all times regardless of location or presence of other people.\n\n\nSingle Country\n\nld = LockdownDates(\"Aruba\", \"2022-01-01\", \"2022-01-08\", (\"stay_at_home\", \"masks\"))\nlockdown_dates = ld.dates()\nlockdown_dates\n\nFetching lockdown dates...\nFetched lockdown dates for: Aruba\n\n\n\n\n\n\n  \n    \n      \n      aruba_country_code\n      aruba_masks\n      aruba_stay_at_home\n    \n    \n      timestamp\n      \n      \n      \n    \n  \n  \n    \n      2022-01-01\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-02\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-03\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-04\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-05\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-06\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-07\n      ABW\n      2.0\n      2.0\n    \n    \n      2022-01-08\n      ABW\n      2.0\n      2.0\n    \n  \n\n\n\n\n\n\nMultiple Countries\n\nld2 = LockdownDates([\"Canada\", \"Denmark\"], \"2022-01-01\", \"2022-01-08\", (\"stay_at_home\", \"masks\"))\nlockdown_dates = ld2.dates()\nlockdown_dates\n\nFetching lockdown dates...\nFetched lockdown dates for: Canada, Denmark\n\n\n\n\n\n\n  \n    \n      \n      canada_country_code\n      denmark_country_code\n      canada_masks\n      denmark_masks\n      canada_stay_at_home\n      denmark_stay_at_home\n    \n    \n      timestamp\n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2022-01-01\n      CAN\n      DNK\n      3.0\n      2.0\n      1.0\n      0.0\n    \n    \n      2022-01-02\n      CAN\n      DNK\n      3.0\n      2.0\n      1.0\n      0.0\n    \n    \n      2022-01-03\n      CAN\n      DNK\n      3.0\n      2.0\n      1.0\n      0.0\n    \n    \n      2022-01-04\n      CAN\n      DNK\n      3.0\n      2.0\n      1.0\n      0.0\n    \n    \n      2022-01-05\n      CAN\n      DNK\n      3.0\n      2.0\n      1.0\n      0.0\n    \n    \n      2022-01-06\n      CAN\n      DNK\n      3.0\n      2.0\n      1.0\n      0.0\n    \n    \n      2022-01-07\n      CAN\n      DNK\n      3.0\n      2.0\n      1.0\n      0.0\n    \n    \n      2022-01-08\n      CAN\n      DNK\n      3.0\n      2.0\n      1.0\n      0.0"
  },
  {
    "objectID": "index.html#available-countries",
    "href": "index.html#available-countries",
    "title": "lockdowndates",
    "section": "Available Countries",
    "text": "Available Countries\n\n\n\nCountry\n\n\n\n\nAfghanistan\n\n\nAlbania\n\n\nAlgeria\n\n\nAndorra\n\n\nAngola\n\n\nArgentina\n\n\nAruba\n\n\nAustralia\n\n\nAustria\n\n\nAzerbaijan\n\n\nBahamas\n\n\nBahrain\n\n\nBangladesh\n\n\nBarbados\n\n\nBelarus\n\n\nBelgium\n\n\nBelize\n\n\nBenin\n\n\nBermuda\n\n\nBhutan\n\n\nBolivia\n\n\nBosnia and Herzegovina\n\n\nBotswana\n\n\nBrazil\n\n\nBrunei\n\n\nBulgaria\n\n\nBurkina Faso\n\n\nBurundi\n\n\nCambodia\n\n\nCameroon\n\n\nCanada\n\n\nCape Verde\n\n\nCentral African Republic\n\n\nChad\n\n\nChile\n\n\nChina\n\n\nColombia\n\n\nComoros\n\n\nCongo\n\n\nCosta Rica\n\n\nCote d’Ivoire\n\n\nCroatia\n\n\nCuba\n\n\nCyprus\n\n\nCzech Republic\n\n\nDemocratic Republic of Congo\n\n\nDenmark\n\n\nDjibouti\n\n\nDominica\n\n\nDominican Republic\n\n\nEcuador\n\n\nEgypt\n\n\nEl Salvador\n\n\nEritrea\n\n\nEstonia\n\n\nEswatini\n\n\nEthiopia\n\n\nFaeroe Islands\n\n\nFiji\n\n\nFinland\n\n\nFrance\n\n\nGabon\n\n\nGambia\n\n\nGeorgia\n\n\nGermany\n\n\nGhana\n\n\nGreece\n\n\nGreenland\n\n\nGuam\n\n\nGuatemala\n\n\nGuinea\n\n\nGuyana\n\n\nHaiti\n\n\nHonduras\n\n\nHong Kong\n\n\nHungary\n\n\nIceland\n\n\nIndia\n\n\nIndonesia\n\n\nIran\n\n\nIraq\n\n\nIreland\n\n\nIsrael\n\n\nItaly\n\n\nJamaica\n\n\nJapan\n\n\nJordan\n\n\nKazakhstan\n\n\nKenya\n\n\nKiribati\n\n\nKosovo\n\n\nKuwait\n\n\nKyrgyz Republic\n\n\nLaos\n\n\nLatvia\n\n\nLebanon\n\n\nLesotho\n\n\nLiberia\n\n\nLibya\n\n\nLiechtenstein\n\n\nLithuania\n\n\nLuxembourg\n\n\nMacao\n\n\nMadagascar\n\n\nMalawi\n\n\nMalaysia\n\n\nMali\n\n\nMalta\n\n\nMauritania\n\n\nMauritius\n\n\nMexico\n\n\nMoldova\n\n\nMonaco\n\n\nMongolia\n\n\nMorocco\n\n\nMozambique\n\n\nMyanmar\n\n\nNamibia\n\n\nNepal\n\n\nNetherlands\n\n\nNew Zealand\n\n\nNicaragua\n\n\nNiger\n\n\nNigeria\n\n\nNorway\n\n\nOman\n\n\nPakistan\n\n\nPalestine\n\n\nPanama\n\n\nPapua New Guinea\n\n\nParaguay\n\n\nPeru\n\n\nPhilippines\n\n\nPoland\n\n\nPortugal\n\n\nPuerto Rico\n\n\nQatar\n\n\nRomania\n\n\nRussia\n\n\nRwanda\n\n\nSan Marino\n\n\nSaudi Arabia\n\n\nSenegal\n\n\nSerbia\n\n\nSeychelles\n\n\nSierra Leone\n\n\nSingapore\n\n\nSlovak Republic\n\n\nSlovenia\n\n\nSolomon Islands\n\n\nSomalia\n\n\nSouth Africa\n\n\nSouth Korea\n\n\nSouth Sudan\n\n\nSpain\n\n\nSri Lanka\n\n\nSudan\n\n\nSuriname\n\n\nSweden\n\n\nSwitzerland\n\n\nSyria\n\n\nTaiwan\n\n\nTajikistan\n\n\nTanzania\n\n\nThailand\n\n\nTimor-Leste\n\n\nTogo\n\n\nTonga\n\n\nTrinidad and Tobago\n\n\nTunisia\n\n\nTurkey\n\n\nTurkmenistan\n\n\nUganda\n\n\nUkraine\n\n\nUnited Arab Emirates\n\n\nUnited Kingdom\n\n\nUnited States\n\n\nUnited States Virgin Islands\n\n\nUruguay\n\n\nUzbekistan\n\n\nVanuatu\n\n\nVenezuela\n\n\nVietnam\n\n\nYemen\n\n\nZambia\n\n\nZimbabwe"
  },
  {
    "objectID": "index.html#roadmap",
    "href": "index.html#roadmap",
    "title": "lockdowndates",
    "section": "Roadmap",
    "text": "Roadmap\n\nMore restrictions"
  },
  {
    "objectID": "index.html#contributions",
    "href": "index.html#contributions",
    "title": "lockdowndates",
    "section": "Contributions",
    "text": "Contributions\nIf there are any restrictions or policies you wish to be added to the package please let me know!\nIssues and pull requests are always welcome."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "lockdowndates",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nA huge massive thanks to Oxford University for open sourcing their data that they’ve been collecting since the pandemic began. Without them this package wouldn’t be possible so please go check them out!\nRepo - https://github.com/OxCGRT/covid-policy-tracker COVID-19 Government Response Tracker - www.bsg.ox.ac.uk/covidtracker"
  }
]